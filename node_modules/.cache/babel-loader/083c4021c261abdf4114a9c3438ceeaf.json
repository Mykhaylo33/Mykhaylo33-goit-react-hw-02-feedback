{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Documents\\\\FSOn74\\\\React\\\\hw\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\Feedback\\\\FeedbackStatistics\\\\FeedbackStatistics.jsx\";\nimport React from \"react\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport FeedbackTitle from \"../FeedbackTitle/FeedbackTitle\";\nimport Notification from \"../Notification/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FeedbackStatistics extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.addReview = name => {\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const totalFeedback = good + neutral + bad;\n      return totalFeedback;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const {\n        good\n      } = this.state;\n      const totalFeedback = this.countTotalFeedback();\n      const percentage = Math.round(good / totalFeedback * 100);\n\n      if (totalFeedback === 0) {\n        return 0;\n      }\n\n      return percentage;\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        addReview: this.addReview,\n        options: Object.keys(this.state)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackTitle, {\n        title: \"Statistics\",\n        style: {\n          fontSize: 25,\n          marginTop: 30,\n          marginLeft: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), totalFeedback === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\",\n        styles: {\n          marginLeft: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n        styles: {\n          listStyle: 'none'\n        },\n        goodRate: good,\n        neutralRate: neutral,\n        badRate: bad,\n        total: totalFeedback,\n        positiveFeedback: positiveFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default FeedbackStatistics;","map":{"version":3,"sources":["C:/Users/DeLL/Documents/FSOn74/React/hw/goit-react-hw-02-feedback/src/components/Feedback/FeedbackStatistics/FeedbackStatistics.jsx"],"names":["React","Statistics","FeedbackOptions","FeedbackTitle","Notification","FeedbackStatistics","Component","state","good","neutral","bad","addReview","name","setState","prevState","countTotalFeedback","totalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","render","positiveFeedback","Object","keys","fontSize","marginTop","marginLeft","listStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAEA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADuC;;AAAA,SAO/CC,SAP+C,GAOlCC,IAAD,IAAU;AACpB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAAE,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AAA5B,OAAhB,CAAd;AACD,KAT8C;;AAAA,SAW/CG,kBAX+C,GAW1B,MAAM;AACzB,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMS,aAAa,GAAGR,IAAI,GAAGC,OAAP,GAAiBC,GAAvC;AACA,aAAOM,aAAP;AACD,KAf8C;;AAAA,SAiB/CC,+BAjB+C,GAiBb,MAAM;AACtC,YAAM;AAAET,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,YAAMS,aAAa,GAAG,KAAKD,kBAAL,EAAtB;AACA,YAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYZ,IAAI,GAACQ,aAAN,GAAuB,GAAlC,CAAnB;;AAEA,UAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB,eAAO,CAAP;AACD;;AAED,aAAOE,UAAP;AACD,KA3B8C;AAAA;;AA6B/CG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMS,aAAa,GAAG,KAAKD,kBAAL,EAAtB;AACA,UAAMO,gBAAgB,GAAG,KAAKL,+BAAL,EAAzB;AAEA,wBACE;AAAA,8BACA,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKN,SAAjC;AAA4C,QAAA,OAAO,EAAEY,MAAM,CAACC,IAAP,CAAY,KAAKjB,KAAjB;AAArD;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,YAArB;AAAkC,QAAA,KAAK,EAAE;AACzCkB,UAAAA,QAAQ,EAAE,EAD+B;AAEzCC,UAAAA,SAAS,EAAE,EAF8B;AAGzCC,UAAAA,UAAU,EAAE;AAH6B;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHA,EASAX,aAAa,KAAK,CAAlB,gBACA,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC,sBAAtB;AAA6C,QAAA,MAAM,EAAE;AAACW,UAAAA,UAAU,EAAE;AAAb;AAArD;AAAA;AAAA;AAAA;AAAA,cADA,gBAGD,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAApB;AACC,QAAA,QAAQ,EAAEpB,IADX;AAEC,QAAA,WAAW,EAAEC,OAFd;AAGC,QAAA,OAAO,EAAEC,GAHV;AAIC,QAAA,KAAK,EAAEM,aAJR;AAKC,QAAA,gBAAgB,EAAEM;AALnB;AAAA;AAAA;AAAA;AAAA,cAZC;AAAA,oBADF;AAwBD;;AA1D8C;;AA6DjD,eAAejB,kBAAf","sourcesContent":["import React from \"react\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport FeedbackTitle from \"../FeedbackTitle/FeedbackTitle\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nclass FeedbackStatistics extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  addReview = (name) => {\r\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state \r\n    const totalFeedback = this.countTotalFeedback();\r\n    const percentage = Math.round((good/totalFeedback) * 100); \r\n\r\n    if (totalFeedback === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return percentage;\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = this.countTotalFeedback();\r\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\r\n  \r\n    return (\r\n      <>\r\n      <FeedbackOptions addReview={this.addReview} options={Object.keys(this.state)}/>\r\n      \r\n      <FeedbackTitle title='Statistics' style={{\r\n      fontSize: 25,\r\n      marginTop: 30,\r\n      marginLeft: 30,\r\n      }}/>\r\n\r\n     {totalFeedback === 0 ?\r\n     (<Notification message='There is no feedback' styles={{marginLeft: 30}}/>)\r\n    : \r\n    (<Statistics styles={{listStyle: 'none'}} \r\n      goodRate={good} \r\n      neutralRate={neutral} \r\n      badRate={bad} \r\n      total={totalFeedback}\r\n      positiveFeedback={positiveFeedback}\r\n    />)}\r\n\r\n     </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackStatistics;\r\n"]},"metadata":{},"sourceType":"module"}